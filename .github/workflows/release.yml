name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: arc-runner-set
    container:
      image: moby/buildkit:rootless
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION=${{ github.event.inputs.tag }}
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "version_clean=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.version }}
            type=raw,value=latest

      - name: Set up Docker credentials
        run: |
          mkdir -p ~/.docker
          echo "{\"auths\":{\"${{ env.REGISTRY }}\":{\"username\":\"${{ github.actor }}\",\"password\":\"${{ secrets.GITHUB_TOKEN }}\"}}}" > ~/.docker/config.json

      - name: Build and push with BuildKit rootless
        id: build
        run: |
          # Preparar tags para BuildKit
          TAGS="${{ steps.meta.outputs.tags }}"
          TAG_ARGS=""
          for tag in $TAGS; do
            TAG_ARGS="$TAG_ARGS --output type=image,name=$tag,push=true"
          done
          
          # Construir y subir con BuildKit
          buildctl-daemonless.sh build \
            --frontend dockerfile.v0 \
            --local context=. \
            --local dockerfile=. \
            --opt build-arg:BUILDKIT_INLINE_CACHE=1 \
            $TAG_ARGS

      - name: Get image digest
        id: digest
        run: |
          # Obtener el digest de la imagen construida
          MAIN_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          DIGEST=$(buildctl-daemonless.sh imagetools inspect --raw $MAIN_TAG | sha256sum | cut -d' ' -f1)
          echo "digest=sha256:$DIGEST" >> $GITHUB_OUTPUT

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.digest.outputs.digest }}
          push-to-registry: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Docker Images
            
            - `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version_clean }}`
            - `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest`
            
            ## What's Changed
            
            Full Changelog: https://github.com/${{ github.repository }}/compare/${{ steps.version.outputs.version }}...HEAD
